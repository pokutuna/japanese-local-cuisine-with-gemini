from _typeshed import Incomplete
from scrapy.http import Response as Response
from scrapy.utils.misc import load_object as load_object
from scrapy.utils.python import binary_is_text as binary_is_text, to_bytes as to_bytes, to_unicode as to_unicode
from typing import Mapping, Optional, Type, Union

class ResponseTypes:
    CLASSES: Incomplete
    classes: Incomplete
    mimetypes: Incomplete
    def __init__(self) -> None: ...
    def from_mimetype(self, mimetype: str) -> Type[Response]: ...
    def from_content_type(self, content_type: Union[str, bytes], content_encoding: Optional[bytes] = None) -> Type[Response]: ...
    def from_content_disposition(self, content_disposition: Union[str, bytes]) -> Type[Response]: ...
    def from_headers(self, headers: Mapping[bytes, bytes]) -> Type[Response]: ...
    def from_filename(self, filename: str) -> Type[Response]: ...
    def from_body(self, body: bytes) -> Type[Response]: ...
    def from_args(self, headers: Optional[Mapping[bytes, bytes]] = None, url: Optional[str] = None, filename: Optional[str] = None, body: Optional[bytes] = None) -> Type[Response]: ...

responsetypes: Incomplete
