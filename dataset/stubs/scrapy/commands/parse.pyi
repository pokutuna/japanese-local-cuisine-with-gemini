from _typeshed import Incomplete
from scrapy.commands import BaseRunSpiderCommand as BaseRunSpiderCommand
from scrapy.exceptions import UsageError as UsageError
from scrapy.http import Request as Request
from scrapy.utils import display as display
from scrapy.utils.asyncgen import collect_asyncgen as collect_asyncgen
from scrapy.utils.defer import aiter_errback as aiter_errback, deferred_from_coro as deferred_from_coro
from scrapy.utils.log import failure_to_exc_info as failure_to_exc_info
from scrapy.utils.misc import arg_to_iter as arg_to_iter
from scrapy.utils.spider import spidercls_for_request as spidercls_for_request
from typing import Dict

logger: Incomplete

class Command(BaseRunSpiderCommand):
    requires_project: bool
    spider: Incomplete
    items: Dict[int, list]
    requests: Dict[int, list]
    first_response: Incomplete
    def syntax(self): ...
    def short_desc(self): ...
    def add_options(self, parser) -> None: ...
    @property
    def max_level(self): ...
    def handle_exception(self, _failure) -> None: ...
    def iterate_spider_output(self, result): ...
    def add_items(self, lvl, new_items) -> None: ...
    def add_requests(self, lvl, new_reqs) -> None: ...
    def print_items(self, lvl: Incomplete | None = None, colour: bool = True) -> None: ...
    def print_requests(self, lvl: Incomplete | None = None, colour: bool = True) -> None: ...
    def print_results(self, opts) -> None: ...
    def run_callback(self, response, callback, cb_kwargs: Incomplete | None = None): ...
    def get_callback_from_rules(self, spider, response): ...
    spidercls: Incomplete
    def set_spidercls(self, url, opts) -> None: ...
    pcrawler: Incomplete
    def start_parsing(self, url, opts) -> None: ...
    def scraped_data(self, args): ...
    def prepare_request(self, spider, request, opts): ...
    def process_options(self, args, opts) -> None: ...
    def process_request_meta(self, opts) -> None: ...
    def process_request_cb_kwargs(self, opts) -> None: ...
    def run(self, args, opts) -> None: ...
