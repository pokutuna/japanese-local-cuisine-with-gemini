from _typeshed import Incomplete
from scrapy.exceptions import NotSupported as NotSupported
from scrapy.http.common import obsolete_setter as obsolete_setter
from scrapy.http.headers import Headers as Headers
from scrapy.http.request import Request as Request
from scrapy.link import Link as Link
from scrapy.utils.trackref import object_ref as object_ref
from typing import Generator, Tuple

class Response(object_ref):
    attributes: Tuple[str, ...]
    headers: Incomplete
    status: Incomplete
    request: Incomplete
    flags: Incomplete
    certificate: Incomplete
    ip_address: Incomplete
    protocol: Incomplete
    def __init__(self, url: str, status: int = 200, headers: Incomplete | None = None, body: bytes = b'', flags: Incomplete | None = None, request: Incomplete | None = None, certificate: Incomplete | None = None, ip_address: Incomplete | None = None, protocol: Incomplete | None = None) -> None: ...
    @property
    def cb_kwargs(self): ...
    @property
    def meta(self): ...
    url: Incomplete
    body: Incomplete
    def copy(self): ...
    def replace(self, *args, **kwargs): ...
    def urljoin(self, url): ...
    @property
    def text(self) -> None: ...
    def css(self, *a, **kw) -> None: ...
    def jmespath(self, *a, **kw) -> None: ...
    def xpath(self, *a, **kw) -> None: ...
    def follow(self, url, callback: Incomplete | None = None, method: str = 'GET', headers: Incomplete | None = None, body: Incomplete | None = None, cookies: Incomplete | None = None, meta: Incomplete | None = None, encoding: str = 'utf-8', priority: int = 0, dont_filter: bool = False, errback: Incomplete | None = None, cb_kwargs: Incomplete | None = None, flags: Incomplete | None = None) -> Request: ...
    def follow_all(self, urls, callback: Incomplete | None = None, method: str = 'GET', headers: Incomplete | None = None, body: Incomplete | None = None, cookies: Incomplete | None = None, meta: Incomplete | None = None, encoding: str = 'utf-8', priority: int = 0, dont_filter: bool = False, errback: Incomplete | None = None, cb_kwargs: Incomplete | None = None, flags: Incomplete | None = None) -> Generator[Request, None, None]: ...
